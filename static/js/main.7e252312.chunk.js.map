{"version":3,"sources":["assets/jackson-hendry-eodA_8CTOFo-unsplash.jpg","assets/chuttersnap-TSgwbumanuE-unsplash.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","weather","setWeather","city","setcity","lat","JSON","parse","localStorage","getItem","long","useEffect","Date","getHours","axios","get","then","res","newWeather","data","catch","err","alert","navigator","geolocation","getCurrentPosition","position","setItem","coords","latitude","longitude","class","type","placeholder","id","onClick","document","getElementById","value","name","description","main","temp","humidity","wind","speed","temp_min","temp_max","coord","lon","sys","country","feels_like","pressure","deg","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gMAAe,ICAA,I,MCyIAA,MAnIf,WAAgB,IAAD,IACX,EAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAuBF,mBAAS,MAAhC,mBAAOG,EAAP,KAAYC,EAAZ,KACIC,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,QACtCC,EAAOJ,KAAKC,MAAMC,aAAaC,QAAQ,SAqEvC,OAxDJE,qBAAU,YACG,IAAIC,MACCC,WA6BlB,GAAW,MAARV,EACOW,IAAMC,IAAN,4DAA+DZ,EAA/D,0DACCa,MAAK,SAACC,GACH,IAAMC,EAAaD,EAAIE,KACvBjB,EAAWgB,MACZE,OAAM,SAACC,GAAOC,MAAM,6BAGzB,GAAIC,UAAUC,YAAa,CACzBD,UAAUC,YAAYC,oBACtB,SAAsBC,GACpBlB,aAAamB,QAAQ,MAAOD,EAASE,OAAOC,UAC5CrB,aAAamB,QAAQ,OAAQD,EAASE,OAAOE,WAC7ChB,IAAMC,IAAN,8DAAiEV,EAAjE,gBAA4EK,EAA5E,0DACCM,MAAK,SAACC,GACH,IAAMC,EAAaD,EAAIE,KACvBjB,EAAWgB,MACZE,OAAM,SAACC,GAAOC,MAAM,qCAGzBA,MAAM,kCAGT,CAACnB,IAEI,8BAKK,OAAZF,EACC,qCACA,uBAAO8B,MAAM,SAAb,SACF,uBAAOC,KAAK,eAGV,uBAAOD,MAAM,YAAYE,YAAY,+BAA+BC,GAAG,SACrE,wBAAQH,MAAM,YAAYI,QAAS,WAC/B/B,EAAQgC,SAASC,eAAe,QAAQC,QAD5C,oBAKA,oBAAIJ,GAAG,QAAP,SAAgBjC,EAAQsC,OACxB,oBAAIL,GAAG,eAAP,gBAAuBjC,QAAvB,IAAuBA,OAAvB,EAAuBA,EAASA,QAAQ,GAAGuC,cAC3C,qBAAIN,GAAG,QAAP,iBAAgBjC,QAAhB,IAAgBA,GAAhB,UAAgBA,EAASwC,YAAzB,aAAgB,EAAeC,KAA/B,IAAqC,sBAAMR,GAAG,SAAT,sBACrC,sBAAKH,MAAM,UAAX,UACA,qBAAIG,GAAG,WAAP,8BAA6BjC,QAA7B,IAA6BA,GAA7B,UAA6BA,EAASwC,YAAtC,aAA6B,EAAeE,SAA5C,6BACA,qBAAIT,GAAG,aAAP,kCAAmCjC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAS2C,KAAKC,MAAjD,aAEJ,uBACA,sBAAKX,GAAG,MAAR,UACI,sBAAKH,MAAM,SAAX,UACA,oDAAuB9B,EAAQwC,KAAKK,SAApC,WACA,oDAAuB7C,EAAQwC,KAAKM,SAApC,cAEA,sBAAKhB,MAAM,SAAX,UACA,4CAAe9B,EAAQ+C,MAAM3C,OAC7B,6CAAgBJ,EAAQ+C,MAAMC,UAE9B,sBAAKlB,MAAM,SAAX,UACA,4CAAe9B,EAAQiD,IAAIC,WAC3B,+CAAkBlD,EAAQwC,KAAKW,WAA/B,cAEA,sBAAKrB,MAAM,SAAX,UACA,6CAAgB9B,EAAQwC,KAAKY,SAA7B,SACA,mDAAsBpD,EAAQ2C,KAAKU,IAAnC,iBAIA,uBACA,0BAIF,qBAAKvB,MAAM,cCpHNwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAASC,eAAe,SAM1BkB,K","file":"static/js/main.7e252312.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/jackson-hendry-eodA_8CTOFo-unsplash.d2e60154.jpg\";","export default __webpack_public_path__ + \"static/media/chuttersnap-TSgwbumanuE-unsplash.714d7872.jpg\";","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './index.css';\r\nimport pic1 from './assets/jackson-hendry-eodA_8CTOFo-unsplash.jpg'\r\nimport pic2 from './assets/chuttersnap-TSgwbumanuE-unsplash.jpg';\r\n\r\nfunction App() {\r\n    const [weather, setWeather] = useState(null);\r\n    const [city,setcity] = useState(null);\r\n    let lat = JSON.parse(localStorage.getItem('lat'))\r\n    let long = JSON.parse(localStorage.getItem('long'))\r\n    // const [isBright, setIsDark] =useState(true);\r\n    // const [isB, setIsD] =useState(true);\r\n  //   const display = document.querySelector('body');\r\n  // display.className = isBright ? \"Bright\" : \"Dark\";\r\n\r\n  // const display = document.querySelector('body');\r\n  // display.className = isBright ? \"Bright\" : \"Dark\";\r\n  // const theme = () => {\r\n  //   const display = document.querySelector('body');\r\n  // display.className = isBright ? \"Bright\" : \"Dark\";\r\n   \r\n  // var main=document.getElementById(\"main\")\r\n    useEffect(()=>{\r\n      let date = new Date();\r\n      let time = date.getHours();\r\n \r\n      // let display2=document.querySelector('body');\r\n      //    display2.className = isB ? \"Darkmain\" : \"Brightmain\";\r\n        // if(time>=19 || time<6){\r\n        //   // document.querySelector('.Darkmain');\r\n        //   const display = document.querySelector('body');\r\n        //   display.className = isBright ? \"Bright\" : \"Dark\";\r\n        //     setIsDark(!isBright);\r\n            \r\n\r\n          \r\n          // setIsD(!isB)\r\n          // setIsDark(!isBright)\r\n          // setIsDark(!isBright)\r\n          \r\n          \r\n        // }\r\n        // else{\r\n        //   theme()\r\n        //   setIsD(true)\r\n          // document.querySelector('#Brightmain');\r\n          // setIsD(isB)\r\n          // if(time<19 || time>6){\r\n          // main.innerHTML=`<img src=${pic2} alt=\"asd\" width=\"200px\" height=\"200px\"/>`\r\n          // console.log(\"data\")\r\n          \r\n          \r\n        \r\n    if(city != null){\r\n              axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&&appid=0c702b3dffad340f5e1890bd9eeb5d0f&units=metric`)\r\n              .then((res) => {\r\n                  const newWeather = res.data;\r\n                  setWeather(newWeather);\r\n              }).catch((err)=>{alert(\"invalid city name\")})\r\n            }\r\n            else \r\n            if (navigator.geolocation) {\r\n              navigator.geolocation.getCurrentPosition(showPosition);\r\n              function showPosition(position) {\r\n                localStorage.setItem('lat', position.coords.latitude)\r\n                localStorage.setItem('long', position.coords.longitude)\r\n                axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&&appid=0c702b3dffad340f5e1890bd9eeb5d0f&units=metric`)\r\n                .then((res) => {\r\n                    const newWeather = res.data;\r\n                    setWeather(newWeather);\r\n                }).catch((err)=>{alert(\"location is turned off\")})\r\n                }\r\n            } else { \r\n              alert(\"please turn on your location\")\r\n            }\r\n          }\r\n          ,[city])\r\n    \r\n        return (<div>\r\n          {/* <img src={pic1} alt=\"Moon\" id=\"Darkmain\"/>  */}\r\n          {/* <img src={pic2} alt=\"Moon\" id=\"brightmain\"/>  */}\r\n          {\r\n          \r\n        (weather !== null) ?\r\n          <>\r\n          <label class=\"switch\">\r\n        <input type=\"checkbox\"></input>\r\n  \r\n      </label>\r\n          <input class=\"searchBar\" placeholder=\"Check Weather OF any Country\" id=\"city\"/>\r\n            <button class=\"searchBtn\" onClick={()=>{\r\n                setcity(document.getElementById('city').value);\r\n             \r\n                }}>Search</button>\r\n                \r\n            <h1 id=\"wName\">{weather.name}</h1>\r\n            <h2 id=\"wDescription\">{weather?.weather[0].description}</h2>\r\n            <h1 id=\"wTemp\">{weather?.main?.temp} <span id=\"degree\">°C</span></h1>\r\n            <div class=\"humwind\">\r\n            <h3 id=\"Humidity\">Humidity: {weather?.main?.humidity} g/kg &nbsp;&nbsp;&nbsp;&nbsp; </h3>\r\n            <h3 id=\"wWindspeed\">  Wind Speed: {weather?.wind.speed} m/s</h3>\r\n            </div>\r\n        <br></br>\r\n        <div id=\"dtl\">\r\n            <div class=\"detail\">\r\n            <h6>Min Temperature : {weather.main.temp_min}°C</h6>\r\n            <h6>Max Temperature : {weather.main.temp_max}°C</h6>\r\n            </div>\r\n            <div class=\"detail\">\r\n            <h6>Latitude: {weather.coord.lat}</h6>\r\n            <h6>Longitude: {weather.coord.lon}</h6>\r\n            </div>\r\n            <div class=\"detail\">\r\n            <h6>Country : {weather.sys.country}</h6>\r\n            <h6>Feels Like : {weather.main.feels_like}°C</h6>\r\n            </div>\r\n            <div class=\"detail\">\r\n            <h6>Pressure : {weather.main.pressure} Pa</h6>\r\n            <h6>Wind Direction : {weather.wind.deg} °</h6>\r\n            </div>\r\n           \r\n            </div> \r\n            <br></br> \r\n            <br></br>\r\n                 \r\n          </>\r\n          :\r\n          <div class=\"loader\"></div>\r\n\r\n         \r\n      }\r\n     \r\n      \r\n        </div>)\r\n}\r\n    \r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}